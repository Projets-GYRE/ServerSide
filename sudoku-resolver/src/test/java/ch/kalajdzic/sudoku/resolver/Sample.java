package ch.kalajdzic.sudoku.resolver;

public class Sample {

    public static Grid sample1() {
        return Grid.builder()
                .add(0, 3, 9)
                .add(0, 2, 1)
                .add(0, 8, 8)
                .add(1, 0, 6)
                .add(1, 4, 8)
                .add(1, 5, 5)
                .add(1, 7, 3)
                .add(2, 2, 7)
                .add(2, 4, 6)
                .add(2, 6, 1)
                .add(3, 1, 3)
                .add(3, 2, 4)
                .add(3, 4, 9)
                .add(4, 3, 5)
                .add(4, 5, 4)
                .add(5, 4, 1)
                .add(5, 6, 4)
                .add(5, 7, 2)
                .add(6, 2, 5)
                .add(6, 4, 7)
                .add(6, 6, 9)
                .add(7, 1, 1)
                .add(7, 3, 8)
                .add(7, 4, 4)
                .add(7, 8, 7)
                .add(8, 0, 7)
                .add(8, 5, 9)
                .add(8, 6, 2)
                .build();
    }

    public static Grid sample2() {
        return Grid.builder()
                .add(0, 3, 2)
                .add(0, 5, 4)
                .add(0, 6, 8)
                .add(0, 7, 1)
                .add(1, 1, 4)
                .add(1, 5, 8)
                .add(1, 6, 2)
                .add(1, 7, 6)
                .add(1, 8, 3)
                .add(2, 0, 3)
                .add(2, 3, 1)
                .add(2, 4, 6)
                .add(2, 8, 4)
                .add(3, 0, 1)
                .add(3, 4, 4)
                .add(3, 6, 5)
                .add(3, 7, 8)
                .add(4, 0, 6)
                .add(4, 1, 3)
                .add(4, 2, 5)
                .add(4, 3, 8)
                .add(4, 4, 2)
                .add(4, 8, 7)
                .add(5, 0, 2)
                .add(5, 3, 5)
                .add(5, 4, 9)
                .add(5, 6, 1)
                .add(6, 0, 9)
                .add(6, 1, 1)
                .add(6, 3, 7)
                .add(6, 7, 4)
                .add(7, 3, 6)
                .add(7, 4, 8)
                .add(7, 6, 7)
                .add(7, 8, 1)
                .add(8, 0, 8)
                .add(8, 3, 4)
                .add(8, 5, 3)
                .add(8, 7, 5)

                .build();
    }

    public static Grid hard(){
        return Grid.builder()
                .add(1, 0, 6)
                .add(1, 2, 4)
                .add(1, 4, 1)
                .add(1, 6, 2)
                .add(1, 7, 9)
                .add(2, 2, 9)
                .add(3, 4, 2)
                .add(3, 7, 6)
                .add(3, 8, 4)
                .add(4, 1, 5)
                .add(4, 3, 9)
                .add(4, 4, 6)
                .add(4, 7, 8)
                .add(5, 0, 9)
                .add(5, 2, 6)
                .add(5, 3, 3)
                .add(5, 5, 8)
                .add(6, 1, 6)
                .add(6, 6, 7)
                .add(7, 3, 8)
                .add(7, 6, 5)
                .add(8, 0, 2)
                .add(8, 3, 5)
                .add(8, 7, 3)
                .add(8, 8, 9)
                .build();
    }

    public static Grid impossibleWithBruteForce(){// for fun
        return Grid.builder()
                .add(2, 2, 1)
                .add(2, 4, 2)
                .add(1, 5, 3)
                .add(1, 7, 8)
                .add(1, 8, 5)
                .add(5, 1, 9)
                .add(4, 2, 4)
                .add(3, 3, 5)
                .add(3, 5, 7)
                .add(4, 6, 1)
                .add(6, 0, 5)
                .add(7, 2, 2)
                .add(7, 4, 1)
                .add(8, 4, 4)
                .add(6, 7, 7)
                .add(6, 8, 3)
                .add(8, 8, 9)

                .build();
    }
}
